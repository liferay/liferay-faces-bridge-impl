<?xml version="1.0" encoding="UTF-8"?>
<faces-config version="1.2" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-facesconfig_1_2.xsd"
	xmlns:bridge="http://www.liferay.com/xml/ns/liferay-faces-bridge-2.0-extension" xmlns:util="http://www.liferay.com/xml/ns/liferay-faces-util-extension">
	<faces-config-extension>
		<name>LiferayFacesBridge</name>
		<ordering>
			<after>
				<name>LiferayFacesUtil</name>
			</after>
			<before>
				<others />
			</before>
		</ordering>
	</faces-config-extension>
	<application>
		<application-extension>
			<bridge:excluded-attributes>
				<bridge:excluded-attribute>com.liferay.faces.bridge.context.BridgeContext</bridge:excluded-attribute>
				<bridge:excluded-attribute>org.apache.myfaces.trinidad.util.RequestStateMap</bridge:excluded-attribute>
			</bridge:excluded-attributes>
			<bridge:write-behind-response-wrappers>
				<bridge:render-response-wrapper-class>com.liferay.faces.bridge.application.view.internal.BridgeWriteBehindResponseRenderImpl</bridge:render-response-wrapper-class>
				<bridge:resource-response-wrapper-class>com.liferay.faces.bridge.application.view.internal.BridgeWriteBehindResponseResourceImpl</bridge:resource-response-wrapper-class>
			</bridge:write-behind-response-wrappers>
		</application-extension>
		<el-resolver>com.liferay.faces.bridge.el.internal.ELResolverImpl</el-resolver>
		<view-handler>com.liferay.faces.bridge.application.internal.ViewHandlerImpl</view-handler>
	</application>
	<component>
		<component-type>com.liferay.faces.bridge.component.inputfile.InputFile</component-type>
		<component-class>com.liferay.faces.bridge.component.inputfile.InputFile</component-class>
	</component>
	<component>
		<component-type>javax.faces.HtmlMessage</component-type>
		<component-class>com.liferay.faces.bridge.component.html.internal.HtmlMessageBridgeImpl</component-class>
		<component-extension>
			<base-component-type>javax.faces.Message</base-component-type>
			<renderer-type>javax.faces.Message</renderer-type>
		</component-extension>
	</component>
	<component>
		<component-type>javax.faces.HtmlMessages</component-type>
		<component-class>com.liferay.faces.bridge.component.html.internal.HtmlMessagesBridgeImpl</component-class>
		<component-extension>
			<base-component-type>javax.faces.Messages</base-component-type>
			<renderer-type>javax.faces.Messages</renderer-type>
		</component-extension>
	</component>
	<component>
		<component-type>com.liferay.faces.portlet.component.renderurl.RenderURL</component-type>
		<component-class>com.liferay.faces.portlet.component.renderurl.RenderURL</component-class>
	</component>
	<component>
		<component-type>com.liferay.faces.portlet.component.actionurl.ActionURL</component-type>
		<component-class>com.liferay.faces.portlet.component.actionurl.ActionURL</component-class>
	</component>
	<component>
		<component-type>com.liferay.faces.portlet.component.resourceurl.ResourceURL</component-type>
		<component-class>com.liferay.faces.portlet.component.resourceurl.ResourceURL</component-class>
	</component>
	<component>
		<component-type>com.liferay.faces.portlet.component.namespace.Namespace</component-type>
		<component-class>com.liferay.faces.portlet.component.namespace.Namespace</component-class>
	</component>
	<component>
		<component-type>com.liferay.faces.portlet.component.property.Property</component-type>
		<component-class>com.liferay.faces.portlet.component.property.Property</component-class>
	</component>
	<component>
		<component-type>com.liferay.faces.portlet.component.param.Param</component-type>
		<component-class>com.liferay.faces.portlet.component.param.Param</component-class>
	</component>
	<component>
		<component-type>com.liferay.faces.portlet.component.defineobjects.DefineObjects</component-type>
		<component-class>com.liferay.faces.portlet.component.defineobjects.DefineObjects</component-class>
	</component>
	<factory>
		<application-factory>com.liferay.faces.bridge.application.internal.ApplicationFactoryImpl</application-factory>
		<factory-extension>
			<bridge:bean-manager-factory>com.liferay.faces.bridge.bean.internal.BeanManagerFactoryImpl</bridge:bean-manager-factory>
			<bridge:bridge-config-factory>com.liferay.faces.bridge.internal.BridgeConfigFactoryImpl</bridge:bridge-config-factory>
			<bridge:bridge-event-handler-factory>com.liferay.faces.bridge.internal.BridgeEventHandlerFactoryImpl</bridge:bridge-event-handler-factory>
			<bridge:bridge-portlet-config-factory>com.liferay.faces.bridge.filter.internal.BridgePortletConfigFactoryImpl</bridge:bridge-portlet-config-factory>
			<bridge:bridge-portlet-context-factory>com.liferay.faces.bridge.filter.internal.BridgePortletContextFactoryImpl</bridge:bridge-portlet-context-factory>
			<bridge:bridge-portlet-request-factory>com.liferay.faces.bridge.filter.internal.BridgePortletRequestFactoryImpl</bridge:bridge-portlet-request-factory>
			<bridge:bridge-portlet-response-factory>com.liferay.faces.bridge.filter.internal.BridgePortletResponseFactoryImpl</bridge:bridge-portlet-response-factory>
			<bridge:bridge-public-render-parameter-handler-factory>com.liferay.faces.bridge.internal.BridgePublicRenderParameterHandlerFactoryImpl</bridge:bridge-public-render-parameter-handler-factory>
			<bridge:bridge-request-scope-factory>com.liferay.faces.bridge.scope.internal.BridgeRequestScopeFactoryImpl</bridge:bridge-request-scope-factory>
			<bridge:bridge-request-scope-cache-factory>com.liferay.faces.bridge.scope.internal.BridgeRequestScopeCacheFactoryImpl</bridge:bridge-request-scope-cache-factory>
			<bridge:bridge-request-scope-manager-factory>com.liferay.faces.bridge.scope.internal.BridgeRequestScopeManagerFactoryImpl</bridge:bridge-request-scope-manager-factory>
			<bridge:bridge-write-behind-support-factory>com.liferay.faces.bridge.application.view.internal.BridgeWriteBehindSupportFactoryImpl</bridge:bridge-write-behind-support-factory>
			<bridge:bridge-uri-factory>com.liferay.faces.bridge.internal.BridgeURIFactoryImpl</bridge:bridge-uri-factory>
			<bridge:bridge-url-factory>com.liferay.faces.bridge.internal.BridgeURLFactoryImpl</bridge:bridge-url-factory>
			<bridge:context-map-factory>com.liferay.faces.bridge.context.map.internal.ContextMapFactoryImpl</bridge:context-map-factory>
			<bridge:incongruity-context-factory>com.liferay.faces.bridge.context.internal.IncongruityContextFactoryImpl</bridge:incongruity-context-factory>
			<bridge:pre-destroy-invoker-factory>com.liferay.faces.bridge.bean.internal.PreDestroyInvokerFactoryImpl</bridge:pre-destroy-invoker-factory>
			<bridge:request-attribute-inspector-factory>com.liferay.faces.bridge.scope.internal.RequestAttributeInspectorFactoryImpl</bridge:request-attribute-inspector-factory>
			<bridge:view-handler-factory>com.liferay.faces.bridge.application.internal.ViewHandlerFactoryImpl</bridge:view-handler-factory>
			<util:browser-sniffer-factory>com.liferay.faces.bridge.client.internal.BrowserSnifferFactoryBridgeImpl</util:browser-sniffer-factory>
			<util:i18n-factory>com.liferay.faces.bridge.i18n.internal.I18nFactoryBridgeImpl</util:i18n-factory>
			<util:resource-validator-factory>com.liferay.faces.bridge.application.internal.ResourceValidatorFactoryBridgeImpl</util:resource-validator-factory>
		</factory-extension>
	</factory>
	<lifecycle>
		<!-- Section 5.2.4 of the JSR 329 Spec requires that a phase listener be registered in order to handle Portlet -->
		<!-- 2.0 Public Render Parameters after the RESTORE_VIEW phase of the JSF lifecycle executes. The IPCPhaseListener -->
		<!-- satisfies this requirement. -->
		<phase-listener>com.liferay.faces.bridge.event.internal.IPCPhaseListener</phase-listener>
		<!-- Add the ManagedBeanScopePhaseListener so that after the RENDER_RESPONSE phase, the managed-beans in -->
		<!-- bridgeRequestScope will go out-of-scope which will in turn cause any annotated PreDestroy methods to -->
		<!-- be called. -->
		<phase-listener>com.liferay.faces.bridge.event.internal.ManagedBeanScopePhaseListener</phase-listener>
		<!-- Section 5.2.6 also indicates that the bridge must proactively ensure that only the RESTORE_VIEW phase -->
		<!-- executes, and Section 6.4 indicates that a PhaseListener must be used. The RenderRequestPhaseListener -->
		<!-- satisfies this requirement. -->
		<phase-listener>com.liferay.faces.bridge.event.internal.RenderRequestPhaseListener</phase-listener>
	</lifecycle>
	<render-kit>
		<renderer>
			<description>Default renderer for bridge:inputFile tag</description>
			<component-family>javax.faces.Input</component-family>
			<renderer-type>com.liferay.faces.bridge.component.inputfile.InputFileRenderer</renderer-type>
			<renderer-class>com.liferay.faces.bridge.component.inputfile.internal.InputFileRenderer</renderer-class>
		</renderer>
		<renderer>
			<description>Default renderer for portlet:actionURL tag</description>
			<component-family>com.liferay.faces.portlet.component.baseurl</component-family>
			<renderer-type>com.liferay.faces.portlet.component.actionurl.ActionURLRenderer</renderer-type>
			<renderer-class>com.liferay.faces.portlet.component.actionurl.internal.ActionURLRenderer</renderer-class>
		</renderer>
		<renderer>
			<description>Default renderer for portlet:namespace tag</description>
			<component-family>com.liferay.faces.portlet.component.namespace</component-family>
			<renderer-type>com.liferay.faces.portlet.component.namespace.NameSpaceRenderer</renderer-type>
			<renderer-class>com.liferay.faces.portlet.component.namespace.internal.NamespaceRenderer</renderer-class>
		</renderer>
		<renderer>
			<description>Default renderer for portlet:renderURL tag</description>
			<component-family>com.liferay.faces.portlet.component.baseurl</component-family>
			<renderer-type>com.liferay.faces.portlet.component.renderurl.RenderURLRenderer</renderer-type>
			<renderer-class>com.liferay.faces.portlet.component.renderurl.internal.RenderURLRenderer</renderer-class>
		</renderer>
		<renderer>
			<description>Default renderer for portlet:resourceURL tag</description>
			<component-family>com.liferay.faces.portlet.component.baseurl</component-family>
			<renderer-type>com.liferay.faces.portlet.component.resourceurl.ResourceURLRenderer</renderer-type>
			<renderer-class>com.liferay.faces.portlet.component.resourceurl.internal.ResourceURLRenderer</renderer-class>
		</renderer>
	</render-kit>
</faces-config>
