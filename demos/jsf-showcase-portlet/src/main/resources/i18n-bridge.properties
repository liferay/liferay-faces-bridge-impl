bridge-inputfile=[javadoc:com.liferay.faces.bridge.component.inputfile.InputFile] is a [javadoc:javax.faces.component.UIInput] component that renders an `&lt;input&gt;` element with `type="file"`. Since it extends [javadoc:javax.faces.component.html.HtmlInputFile], it supports all the features of [vdldoc:h:inputFile] and also supports multi-file uploads.
bridge-inputfile-general=By default, one file can be uploaded as a non-Ajax (full-page) postback.
bridge-inputfile-instant-ajax=Files can be uploaded *instantly* via Ajax by adding an [vdldoc:f:ajax] child tag.
bridge-inputfile-multiple=Multi-file upload is supported by setting the HTML5 passthrough attribute [vdldoc:alloy:inputFile:multiple]=`multiple`.
bridge-inputfile-portlet-only=The [vdldoc:bridge:inputFile] component is a *legacy* feature of Liferay Faces Bridge. Although it has the benefit of supporting *multi-file uploads*, it only works in a *portlet environment* (not in a webapp environment).
portlet=Portlet
portlet-actionurl=[javadoc:com.liferay.faces.portlet.component.actionurl.ActionURL] is a [javadoc:javax.faces.component.UIComponent] that provides the ability to get a [javadoc:javax.portlet.PortletURL] that invokes the ACTION_PHASE of the portlet lifecycle targeting the current portlet.
portlet-actionurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet *action parameters* to the URL. The [vdldoc:portlet:actionURL] component tag is *provided for the sake of completeness* since it has little purpose in JSF portlets. As shown in the example below, a *practical use-case* might be to @Override [javadoc:javax.portlet.faces.GenericFacesPortlet] in order to intercept a non-JSF postback.
portlet-namespace=[javadoc:com.liferay.faces.portlet.component.namespace.Namespace] is a [javadoc:javax.faces.component.UIComponent] that provides the ability to get the portlet namespace.
portlet-namespace-general=There are two basic ways to get the portlet namespace:
portlet-namespace-general-example-1=Introducing a var into the EL
portlet-namespace-general-example-2=Output directly to the response
portlet-renderurl=[javadoc:com.liferay.faces.portlet.component.renderurl.RenderURL] is a [javadoc:javax.faces.component.UIComponent] that provides the ability to get a [javadoc:javax.portlet.PortletURL] that invokes the RENDER_PHASE of the portlet lifecycle targeting the current portlet.
portlet-renderurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet *render parameters* to the URL.
portlet-resourceurl=[javadoc:com.liferay.faces.portlet.component.resourceurl.ResourceURL] is a [javadoc:javax.faces.component.UIComponent] that provides the ability to get a [javadoc:javax.portlet.ResourceURL] that invokes the RESOURCE_PHASE of the portlet lifecycle targeting the current portlet.
portlet-resourceurl-general=Specify [vdldoc:portlet:param] as a child tag in order to add portlet resource parameters to the URL. The example below shows how to specify the *javax.faces.resource* and *ln* portlet *resource parameters* in order to get a URL that targets a JSF *image* resource.
the-enclosing-form-must-have-multipart-form-data=The enclosing form must have `enctype="multipart/form-data"`