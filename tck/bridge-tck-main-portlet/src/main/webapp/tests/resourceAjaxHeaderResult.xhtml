<?xml version="1.0" encoding="UTF-8"?>
<f:view xmlns="http://www.w3.org/1999/xhtml"
	xmlns:f="http://xmlns.jcp.org/jsf/core"
	xmlns:h="http://xmlns.jcp.org/jsf/html">
	<h:head/>
	<h:body>
		<h:form>
			<f:event listener="#{chapter6_1_3_3Tests.responseResetPreRenderEventHandler}" type="preRenderComponent" />
			<h:panelGroup layout="block">
				<h:outputLabel value="PPR Result: " />
				<h:outputText id="pprResult" escape="false" value="#{testBean.testResourceResult}"/>
				<h:commandButton id="runPPR" onclick="sendRequest(this); return false;" value="#{testBean.redisplayCommandName}" styleClass="run-ppr-button" />
				<h:commandButton id="clearTest" value="Clear Test" />
			</h:panelGroup>
		</h:form>
		<h:outputScript>
			var sendRequest = function sendRequest(source) {
				var paramPrefix = "";
				var encodedURLHiddenInput = document.getElementsByName(paramPrefix + "javax.faces.encodedURL")[0];
				var encodedURL = encodedURLHiddenInput.getAttribute("value");
				var sourceForm = source.form;
				var xmlHttpRequest = new XMLHttpRequest();
				xmlHttpRequest.onreadystatechange = function() {
					if (this.readyState == 4 &amp;&amp; this.status == 200) {
						var responseXML = this.responseXML;
						var fooHeader = this.getResponseHeader("foo");
						var testName = "#{testBean.testName}";
						var pass = false;
						var failureMessage = "";
						if (testName === "responseFlushBufferTest") {
							var barHeader = this.getResponseHeader("bar");
							if (fooHeader &amp;&amp; (fooHeader === "1234") &amp;&amp; !barHeader) {
								pass = true;
							}
							else {
								failureMessage = "Response header 'bar' was incorrectly present and had a value of '" + barHeader + "'";
							}
						}
						else if (testName === "responseResetTest") {
							if (!fooHeader) {
								pass = true;
							}
							else {
								failureMessage = "Response header 'foo' was incorrectly present and had a value of '" + fooHeader + "'";
							}
						}
						else if (testName === "setResponseHeaderTest") {
							if (fooHeader === "1234") {
								pass = true;
							}
							else {
								failureMessage = "Response header 'foo' had a value of '" + fooHeader + "' instead of '1234'";
							}
						}
						else if (testName === "addResponseHeaderTest") {
							if (fooHeader === "1234, 6789") {
								pass = true;
							}
							else {
								failureMessage = "Response header 'foo' had a value of '" + fooHeader + "' instead of '1234, 6789'";
							}
						}

						var partialResponse = responseXML.getElementsByTagName("partial-response")[0];
						var responseType = partialResponse.firstChild;

						if (responseType.nodeName === "changes") {
							var changes = responseType.childNodes;
							for (var i = 0; i &lt; changes.length; i++) {
								if (changes[i].nodeName === "update") {
									var updateElement = changes[i];
									var updateElementId = changes[i].getAttribute("id");
									var markup = '';
									for (var j = 0; j &lt; updateElement.childNodes.length; j++) {
										var content = updateElement.childNodes[j];
										markup += content.nodeValue;
									}
									var elementToReplace = document.getElementById(updateElementId);
									if (elementToReplace) {
										elementToReplace.innerHTML = markup;
										if (testName === "responseResetTest") {
											if (markup.includes("This will not be present in the output")) {
												pass = false;
												failureMessage += "<br/>The span containing text 'This will not be present in the output' was incorrectly present";
											}
										}
									}
								}
							}
						}
						if (!pass) {
							sourceForm.innerHTML =
								'<span>Test: <span id="' + testName + '-test-name">' + testName +
								'</span><p>Status: <span id="' + testName +
								'-result-status">FAILURE</span></p><p>Detail: <span id="' + testName +
								'-result-detail"></span></p><p>' + failureMessage + '</p></span>';
						}
					}
				};
				xmlHttpRequest.open("POST", encodedURL, true);
				xmlHttpRequest.setRequestHeader("Faces-Request", "partial/ajax");
				var formData = new FormData();
				formData.append(paramPrefix + "javax.faces.source", source.name);
				formData.append(paramPrefix + "javax.faces.partial.event", "click");
				formData.append(paramPrefix + "javax.faces.partial.execute", source.name + " " + source.form.name);
				formData.append(paramPrefix + "javax.faces.partial.render", source.form.name);
				formData.append(paramPrefix + "javax.faces.behavior.event", "action");
				formData.append(paramPrefix + "javax.faces.partial.ajax", "true");
				xmlHttpRequest.send(formData);
			}
		</h:outputScript>
	</h:body>
</f:view>
