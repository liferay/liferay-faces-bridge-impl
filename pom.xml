<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

	<parent>
		<groupId>org.sonatype.oss</groupId>
		<artifactId>oss-parent</artifactId>
		<version>9</version>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<groupId>com.liferay.faces</groupId>
	<artifactId>com.liferay.faces.bridge.impl.parent</artifactId>
	<version>6.0.0-SNAPSHOT</version>
	<packaging>pom</packaging>
	<name>Liferay Faces Bridge Impl Parent</name>
	<description>Parent POM for all Liferay Faces Bridge implementation modules</description>

	<organization>
		<name>Liferay, Inc.</name>
		<url>http://www.liferay.com</url>
	</organization>

	<issueManagement>
		<system>Atlassian JIRA</system>
		<url>http://issues.liferay.com/browse/FACES</url>
	</issueManagement>

	<licenses>
		<license>
			<name>Apache License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0</url>
		</license>
	</licenses>

	<url>http://www.liferay.com/community/liferay-projects/liferay-faces</url>

	<developers>
		<developer>
			<name>Neil Griffin</name>
			<organization>Liferay, Inc.</organization>
			<organizationUrl>http://www.liferay.com</organizationUrl>
		</developer>
		<developer>
			<name>Vernon Singleton</name>
			<organization>Liferay, Inc.</organization>
			<organizationUrl>http://www.liferay.com</organizationUrl>
		</developer>
		<developer>
			<name>Kyle Stiemann</name>
			<organization>Liferay, Inc.</organization>
			<organizationUrl>http://www.liferay.com</organizationUrl>
		</developer>
		<developer>
			<name>Juan Gonzalez</name>
			<organization>Liferay, Inc.</organization>
			<organizationUrl>http://www.liferay.com</organizationUrl>
		</developer>
		<developer>
			<name>Philip White</name>
			<organization>Liferay, Inc.</organization>
			<organizationUrl>http://www.liferay.com</organizationUrl>
		</developer>
		<developer>
			<name>Bruno Basto</name>
			<organization>Liferay, Inc.</organization>
			<organizationUrl>http://www.liferay.com</organizationUrl>
		</developer>
	</developers>

	<scm>
		<connection>scm:git:https://github.com/liferay/liferay-faces-bridge-impl</connection>
		<developerConnection>scm:git:https://github.com/liferay/liferay-faces-bridge-impl</developerConnection>
		<url>scm:git:https://github.com/liferay/liferay-faces-bridge-impl</url>
		<tag>HEAD</tag>
	</scm>

	<modules>
		<module>bridge-impl</module>
		<module>support</module>
		<module>demo</module>
		<module>issue</module>
		<module>tck</module>
		<module>test</module>
	</modules>

	<properties>
		<adf.version>12.2.1-3-0</adf.version>
		<app.server.type>tomcat</app.server.type>
		<aries.cdi.options>-cdiannotations:</aries.cdi.options>
		<bnd.version>4.1.0</bnd.version>
		<cdi.version>1.2</cdi.version>
		<component.namespace>none</component.namespace>
		<faces.api.group.id>javax.faces</faces.api.group.id>
		<faces.api.artifact.id>javax.faces-api</faces.api.artifact.id>
		<faces.api.scope>provided</faces.api.scope>
		<faces.api.version>${faces.spec.version}</faces.api.version>
		<faces.impl.group.id>org.glassfish</faces.impl.group.id>
		<faces.impl.artifact.id>javax.faces</faces.impl.artifact.id>
		<faces.impl.scope>runtime</faces.impl.scope>
		<faces.servlet.container.initializer>com.sun.faces.config.FacesInitializer</faces.servlet.container.initializer>
		<faces.spec.version>2.3</faces.spec.version>
		<faces.version>${mojarra.version}</faces.version>
		<full.version>${project.version} (${timestamp} AD)</full.version>
		<gdk.version>12.2.0-1-0</gdk.version>
		<icefaces.version>4.3.0</icefaces.version>
		<!-- Specifies the DynamicImport-Package directive for use with the "thin" Maven profile. -->
		<osgi.dynamic.import.package></osgi.dynamic.import.package>
		<!-- Ensures that the Liferay Faces Alloy component/renderer classes can be loaded dynamically via -->
		<!-- Class.forName(String) -->
		<osgi.dynamic.import.package.liferay.faces.alloy>
			com.liferay.faces.alloy.*
		</osgi.dynamic.import.package.liferay.faces.alloy>
		<!-- Ensures that the ICEfaces component/renderer classes can be loaded dynamically via -->
		<!-- Class.forName(String) -->
		<osgi.dynamic.import.package.icefaces>
			org.icefaces.*
		</osgi.dynamic.import.package.icefaces>
		<!-- Ensures that the Liferay Faces Bridge and JSF runtime (Mojarra) component/renderer classes can be -->
		<!-- loaded dynamically via Class.forName(String) -->
		<osgi.dynamic.import.package.liferay.faces.bridge>
			com.liferay.faces.bridge.*,\
			com.liferay.faces.portlet.*,\
			com.liferay.faces.util.*,\
			com.sun.faces.*,\
			javax.faces.*,\
			javax.portlet.faces.*
		</osgi.dynamic.import.package.liferay.faces.bridge>
		<!-- Ensures that the PrimeFaces component/renderer classes can be loaded dynamically via -->
		<!-- Class.forName(String) -->
		<osgi.dynamic.import.package.primefaces>
			org.primefaces.*
		</osgi.dynamic.import.package.primefaces>
		<!-- Specifies the Import-Package directive for use with the "thin" Maven profile. -->
		<osgi.import.package></osgi.import.package>
		<!-- Excludes unused ADF Faces transitive package dependencies so that a WAB can resolve. -->
		<osgi.import.package.adf>
			com.oracle.jrf.mt.tenant.*;resolution:=optional,\
			com.sun.enterprise.config.serverbeans;resolution:=optional,\
			com.sun.xml.fastinfoset.*;resolution:=optional,\
			javax.enterprise.concurrent;resolution:=optional,\
			oracle.adf.model;resolution:=optional,\
			oracle.adf.share.http;resolution:=optional,\
			oracle.core.ojdl.*;resolution:=optional,\
			oracle.dms.context;resolution:=optional,\
			oracle.dms.instrument.*;resolution:=optional,\
			oracle.ide.net;resolution:=optional,\
			oracle.javatools.annotations;resolution:=optional,\
			oracle.jbo;resolution:=optional,\
			oracle.jbo.common.*;resolution:=optional,\
			oracle.jdbc.*;resolution:=optional,\
			oracle.jdeveloper.java.*;resolution:=optional,\
			oracle.jrf;resolution:=optional,\
			oracle.jrf.i18n;resolution:=optional,\
			oracle.jrf.wls;resolution:=optional,\
			oracle.jsp.el;resolution:=optional,\
			oracle.portlet.bridge.adf.lifecycle;resolution:=optional,\
			oracle.sql;resolution:=optional,\
			oracle.xdb;resolution:=optional,\
			oracle.xml.schemavalidator;resolution:=optional,\
			org.antlr.runtime.*;resolution:=optional,\
			org.glassfish.hk2.*;resolution:=optional,\
			org.glassfish.internal.api;resolution:=optional,\
			org.jvnet.fastinfoset;resolution:=optional,\
			weblogic.invocation;resolution:=optional,\
			weblogic.server;resolution:=optional
		</osgi.import.package.adf>
		<!-- Excludes unused ButterFaces transitive package dependencies so that a WAB can resolve. -->
		<osgi.import.package.butterfaces>
			sun.reflect.*;resolution:=optional
		</osgi.import.package.butterfaces>
		<!-- Excludes unused Hibernate Validator transitive package dependencies so that a WAB can resolve. -->
		<osgi.import.package.hibernate>
			com.thoughtworks.paranamer;resolution:=optional,\
			javafx.beans.*;resolution:=optional,\
			javax.money;resolution:=optional,\
			org.apache.logging.log4j.*;resolution:=optional,\
			org.jboss.logmanager;resolution:=optional,\
			org.joda.time;resolution:=optional
		</osgi.import.package.hibernate>
		<!-- Excludes unused ICEfaces transitive package dependencies so that a WAB can resolve. -->
		<osgi.import.package.icefaces>
			com.ibm.ws.portletcontainer;resolution:=optional,\
			!com.liferay.portal.theme,\
			!com.liferay.portal.util,\
			com.lowagie.text.*;resolution:=optional,\
			org.apache.myfaces.shared.config;resolution:=optional,\
			org.apache.pluto.container;resolution:=optional,\
			org.icepush.*;resolution:=optional
		</osgi.import.package.icefaces>
		<!-- Specifies that $LIFERAY_HOME/osgi/modules/com.liferay.faces.alloy.jar is required for a WAB to resolve, -->
		<!-- and ensures that it will be included for scanning of descriptors like META-INF/faces-config.xml. -->
		<osgi.import.package.liferay.faces.alloy>
			com.liferay.faces.alloy
		</osgi.import.package.liferay.faces.alloy>
		<!-- Specifies that $LIFERAY_HOME/osgi/modules/com.liferay.faces.bridge.api.jar, -->
		<!-- $LIFERAY_HOME/osgi/modules/com.liferay.faces.bridge.impl.jar, -->
		<!-- $LIFERAY_HOME/osgi/modules/com.liferay.faces.bridge.ext.jar, -->
		<!-- and javax.faces.jar (the JSF runtime) are required for a WAB to resolve, and ensures that each JAR -->
		<!-- will be included for scanning of descriptors like META-INF/faces-config.xml. The optional imports are -->
		<!-- unused transitive package dependencies. They are added automatically by the Liferay WAB generator at -->
		<!-- deploy time, but must be marked as optional since they are not present in the runtime classpath. -->
		<osgi.import.package.liferay.faces.bridge>
			com.liferay.faces.bridge.ext,\
			com.liferay.faces.bridge.impl,\
			com.sun.faces,\
			javax.annotation,\
			javax.el,\
			javax.faces,\
			javax.portlet.faces,\
			net.fortuna.ical4j.*;resolution:=optional,\
			org.apache.axis.tools.ant.*;resolution:=optional,\
			org.apache.poi.*;resolution:=optional,\
			com.swabunga.spell.*;resolution:=optional,\
			*
		</osgi.import.package.liferay.faces.bridge>
		<!-- Specifies that $LIFERAY_HOME/osgi/modules/primefaces.jar is required for a WAB to resolve, and ensures -->
		<!-- that it will be included for scanning of descriptors like META-INF/faces-config.xml. -->
		<osgi.import.package.primefaces>
			org.primefaces
		</osgi.import.package.primefaces>
		<!-- Excludes unused RichFaces transitive package dependencies so that a WAB can resolve. -->
		<osgi.import.package.richfaces>
			com.beust.jcommander;resolution:=optional,\
			com.google.appengine.api;resolution:=optional,\
			com.google.apphosting.api;resolution:=optional,\
			com.opensymphony.oscache.*;resolution:=optional,\
			com.yahoo.platform.yui.compressor;resolution:=optional,\
			javax.jms;resolution:=optional,\
			net.sf.ehcache.*;resolution:=optional,\
			org.atmosphere.*;resolution:=optional,\
			org.jboss.cache.*;resolution:=optional,\
			org.jboss.el;resolution:=optional,\
			org.mozilla.javascript;resolution:=optional,\
			org.reflections.*;resolution:=optional
		</osgi.import.package.richfaces>
		<!-- Excludes unused Spring Framework transitive package dependencies so that a WAB can resolve. -->
		<osgi.import.package.spring>
			COM.newmonics.PercClassLoader.*;resolution:=optional,\
			android.os.*;resolution:=optional,\
			bsh.*;resolution:=optional,\
			com.caucho.*;resolution:=optional,\
			com.fasterxml.jackson.dataformat.xml;resolution:=optional,\
			com.google.gson.*;resolution:=optional,\
			com.google.protobuf.*;resolution:=optional,\
			com.googlecode.protobuf.*;resolution:=optional,\
			com.jamonapi.*;resolution:=optional,\
			com.rometools.rome.*;resolution:=optional,\
			com.squareup.okhttp.*;resolution:=optional,\
			com.sun.net.httpserver;resolution:=optional,\
			groovy.*;resolution:=optional,\
			io.netty.*;resolution:=optional,\
			javax.ejb.*;resolution:=optional,\
			javax.enterprise.*;resolution:=optional,\
			javax.money.*;resolution:=optional,\
			joptsimple.*;resolution:=optional,\
			jrockit.vm.*;resolution:=optional,\
			org.apache.commons.pool.*;resolution:=optional,\
			org.apache.commons.pool2.*;resolution:=optional,\
			org.apache.http.*;resolution:=optional,\
			org.aspectj.*;resolution:=optional,\
			org.codehaus.groovy.*;resolution:=optional,\
			org.hibernate.validator.*;resolution:=optional,\
			org.joda.time.*;resolution:=optional,\
			org.jruby.*;resolution:=optional,\
			org.omg.CORBA.*;resolution:=optional,\
			org.springframework.asm.util;resolution:=optional,\
			org.springframework.instrument;resolution:=optional,\
			org.yaml.snakeyaml.*;resolution:=optional,\
			sun.reflect;resolution:=optional
		</osgi.import.package.spring>
		<osgi.require.capability></osgi.require.capability>
		<!-- Specifies that JSP capabilities are required so that a WAB can resolve. -->
		<osgi.require.capability.jsp>
			osgi.extender;filter:="(&amp;(osgi.extender=jsp.taglib)(uri=http://java.sun.com/jsf/html))",\
			osgi.extender;filter:="(&amp;(osgi.extender=jsp.taglib)(uri=http://java.sun.com/jsf/core))",\
			osgi.extender;filter:="(&amp;(osgi.extender=jsp.taglib)(uri=http://liferay.com/faces/bridge))"
		</osgi.require.capability.jsp>
		<jstl.version>1.2</jstl.version>
		<log4j.version>1.2.14</log4j.version>
		<liferay.app.server.dir>${liferay.home}/tomcat-${liferay.tomcat.version}</liferay.app.server.dir>
		<liferay.auto.deploy.dir>${liferay.home}/deploy</liferay.auto.deploy.dir>
		<liferay.deploy.dir>${liferay.app.server.dir}/webapps</liferay.deploy.dir>
		<liferay.deploy.version>${liferay.version}</liferay.deploy.version>
		<liferay.home>${env.PORTALS_HOME}/liferay.com/${liferay.platform}-${liferay.deploy.version}-portlet-${portlet.spec.version}-jsf-${faces.spec.version}-${thick.or.thin}</liferay.home>
		<liferay.faces.alloy.version>4.1.0</liferay.faces.alloy.version>
		<liferay.faces.bridge.ext.version>8.0.0-SNAPSHOT</liferay.faces.bridge.ext.version>
		<liferay.faces.showcase.version>4.0.0-SNAPSHOT</liferay.faces.showcase.version>
		<liferay.glassfish.version>3.1.2.2</liferay.glassfish.version>
		<liferay.jboss.version>7.1.1</liferay.jboss.version>
		<liferay.jetty.version>8.1.10</liferay.jetty.version>
		<liferay.platform>liferay-ce</liferay.platform>
		<liferay.resin.version>4.0.33</liferay.resin.version>
		<liferay.tomcat.version>8.0.30</liferay.tomcat.version>
		<liferay.version>7.4.3.ga8</liferay.version>
		<liferay.version.dtd>7.2</liferay.version.dtd>
		<liferay.version.major>7</liferay.version.major>
		<liferay.weblogic.version>12.2.1.2</liferay.weblogic.version>
		<liferay.websphere.version>8.0.0.6</liferay.websphere.version>
		<mojarra.version>2.3.9</mojarra.version>
		<myfaces.version>UNSUPPORTED</myfaces.version>
		<pluto.deploy.dir>${pluto.tomcat.dir}/webapps</pluto.deploy.dir>
		<pluto.home>${env.PORTALS_HOME}/liferay.com/pluto-${pluto.version}-jsf-${faces.spec.version}</pluto.home>
		<pluto.tomcat.dir>${pluto.home}/tomcat-${pluto.tomcat.version}</pluto.tomcat.dir>
		<pluto.tomcat.version>8.5.40</pluto.tomcat.version>
		<pluto.version.major>3</pluto.version.major>
		<pluto.version.minor>1</pluto.version.minor>
		<pluto.version.patch>1</pluto.version.patch>
		<pluto.version>${pluto.version.major}.${pluto.version.minor}.${pluto.version.patch}</pluto.version>
		<portal.type>liferay</portal.type>
		<portlet.api.version>${portlet.spec.version}.0</portlet.api.version>
		<portlet.spec.version>3.0</portlet.spec.version>
		<portlet.war.deployment.type>deploy</portlet.war.deployment.type>
		<primefaces.version>11.0.0</primefaces.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<project.stage>Production</project.stage>
		<richfaces.version>4.6.8.ayg</richfaces.version>
		<selenium.version>3.8.1</selenium.version>
		<skip.thin.war.setup>true</skip.thin.war.setup>
		<spring.version>4.2.5.RELEASE</spring.version>
		<surefire.version>2.12</surefire.version>
		<thick.or.thin>thick</thick.or.thin>
		<tck.trinidad.version>2.0.1</tck.trinidad.version>
		<use.jdk6.for.compile>false</use.jdk6.for.compile>
		<war.dependency.scope>compile</war.dependency.scope>
		<war.dependency.scope.commons.logging>${war.dependency.scope}</war.dependency.scope.commons.logging>
		<war.dependency.scope.jstl>${war.dependency.scope}</war.dependency.scope.jstl>
		<war.dependency.scope.primefaces>${war.dependency.scope}</war.dependency.scope.primefaces>
		<war.packaging.excludes>
			WEB-INF/glassfish-*.xml,
			WEB-INF/ibm-*.xml,
			WEB-INF/jboss-*.xml,
			WEB-INF/sun-*.xml,
			WEB-INF/web-*.xml,
			WEB-INF/weblogic.xml
		</war.packaging.excludes>
		<webapp.descriptor>web.xml</webapp.descriptor>
		<weblogic.jaxb.version>2.2.7</weblogic.jaxb.version>
		<weld.version>2.3.3.Final</weld.version>
	</properties>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>com.liferay.faces</groupId>
					<artifactId>com.liferay.faces.maven.plugin</artifactId>
					<version>0.3.0</version>
					<configuration>
						<!-- liferay.auto.deploy.dir is the location where WARs are copied for deployment -->
						<autoDeployDir>${liferay.auto.deploy.dir}</autoDeployDir>
						<configsDeployDir>${liferay.home}/osgi/configs</configsDeployDir>
						<!-- liferay.deploy.dir is the location where extracted WARs are finally deployed -->
						<liferayVersion>${liferay.version}</liferayVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>1.7</version>
					<executions>
						<execution>
							<id>thin-war-setup</id>
							<phase>prepare-package</phase>
							<goals>
								<goal>run</goal>
							</goals>
							<configuration>
								<skip>${skip.thin.war.setup}</skip>
								<target>
									<mkdir dir="${project.build.outputDirectory}/META-INF/services" />
									<echo
                                        file="${project.build.outputDirectory}/META-INF/services/javax.servlet.ServletContainerInitializer"
>com.sun.faces.config.FacesInitializer
com.liferay.faces.util.osgi.internal.FacesThinWabInitializer
com.liferay.faces.bridge.servlet.BridgeServletContainerInitializer
</echo>
									<echo
                                        file="${project.build.outputDirectory}/META-INF/services/com.sun.faces.spi.annotationprovider"
>com.liferay.faces.util.osgi.mojarra.spi.internal.AnnotationProviderOSGiImpl
</echo>
									<echo
                                        file="${project.build.outputDirectory}/META-INF/services/com.sun.faces.spi.FaceletConfigResourceProvider"
>com.liferay.faces.util.osgi.mojarra.spi.internal.FaceletConfigResourceProviderOSGiImpl
</echo>
									<echo
										file="${project.build.outputDirectory}/META-INF/services/com.sun.faces.spi.FacesConfigResourceProvider"
>com.liferay.faces.util.osgi.mojarra.spi.internal.FacesConfigResourceProviderOSGiImpl
</echo>
									<echo
                                        file="${project.build.outputDirectory}/META-INF/services/com.sun.faces.util.cdi11.CDIUtil"
>com.sun.faces.util.cdi11.CDIUtilImpl
</echo>
									<mkdir dir="${project.build.outputDirectory}/WEB-INF" />
								</target>
							</configuration>
						</execution>
					</executions>
					<dependencies>
						<dependency>
							<groupId>ant-contrib</groupId>
							<artifactId>ant-contrib</artifactId>
							<version>1.0b3</version>
							<scope>runtime</scope>
							<exclusions>
								<exclusion>
									<groupId>ant</groupId>
									<artifactId>ant</artifactId>
								</exclusion>
							</exclusions>
						</dependency>
						<dependency>
							<groupId>org.apache.ant</groupId>
							<artifactId>ant-nodeps</artifactId>
							<version>1.8.1</version>
							<scope>runtime</scope>
						</dependency>
					</dependencies>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<source>1.8</source>
						<target>1.8</target>
						<encoding>UTF-8</encoding>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>2.7</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-javadoc-plugin</artifactId>
					<version>2.10.4</version>
					<configuration>
						<additionalparam>-Xdoclint:all -Xdoclint:-missing</additionalparam>
						<sourceFileExcludes>
							<exclude>**/internal/*.java</exclude>
						</sourceFileExcludes>
						<excludePackageNames>*.internal.*</excludePackageNames>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-gpg-plugin</artifactId>
					<version>1.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-war-plugin</artifactId>
					<version>2.3</version>
					<configuration>
						<archive>
							<manifestEntries>
								<Built-By>Release Manager</Built-By>
								<Implementation-Title>${project.name}</Implementation-Title>
								<Implementation-Version>${full.version}</Implementation-Version>
								<Implementation-Vendor-Id>com.liferay</Implementation-Vendor-Id>
								<Implementation-Vendor>${project.organization.name}</Implementation-Vendor>
							</manifestEntries>
						</archive>
						<dependentWarExcludes>WEB-INF/lib/*</dependentWarExcludes>
						<filteringDeploymentDescriptors>true</filteringDeploymentDescriptors>
						<packagingExcludes>${war.packaging.excludes}</packagingExcludes>
						<webXml>${basedir}/src/main/webapp/WEB-INF/${webapp.descriptor}</webXml>
						<webResources>
							<resource>
								<directory>${basedir}/src/main/webapp/WEB-INF</directory>
								<filtering>true</filtering>
								<targetPath>WEB-INF</targetPath>
								<includes>
									<include>**/*.properties</include>
								</includes>
							</resource>
						</webResources>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-install-plugin</artifactId>
					<version>2.5.2</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.1</version>
					<configuration>
						<autoVersionSubmodules>true</autoVersionSubmodules>
						<pushChanges>false</pushChanges>
						<localCheckout>true</localCheckout>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>${surefire.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-report-plugin</artifactId>
					<version>${surefire.version}</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.scm</groupId>
					<artifactId>maven-scm-providers-git</artifactId>
					<!-- http://jira.codehaus.org/browse/SCM-444 -->
					<version>(,1.4]</version>
				</plugin>
				<plugin>
					<groupId>org.appfuse.plugins</groupId>
					<artifactId>maven-warpath-plugin</artifactId>
					<version>2.1.0</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>1.8</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>buildnumber-maven-plugin</artifactId>
					<version>1.1</version>
					<executions>
						<execution>
							<phase>initialize</phase>
							<goals>
								<goal>create-timestamp</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<doCheck>false</doCheck>
						<doUpdate>false</doUpdate>
						<timestampFormat>MMM d, yyyy</timestampFormat>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>selenium-maven-plugin</artifactId>
					<version>2.3</version>
				</plugin>
			</plugins>
		</pluginManagement>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>

	<profiles>
		<profile>
			<id>activate-portlet-war</id>
			<activation>
				<file>
					<exists>src/main/webapp/WEB-INF/liferay-plugin-package.properties</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>generate-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<touch file="target/${app.server.type}-portlet-war-activation.tmp" />
										<touch file="target/${portal.type}-portlet-war-${portlet.war.deployment.type}-activation.tmp" />
										<touch file="target/${portal.type}-portlet-war-activation.tmp" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>development</id>
			<properties>
				<project.stage>Development</project.stage>
			</properties>
		</profile>
		<profile>
			<id>dxp72</id>
			<properties>
				<liferay.deploy.version>7.2.10.sp5</liferay.deploy.version>
				<liferay.faces.alloy.version>3.1.0</liferay.faces.alloy.version>
				<liferay.platform>liferay-dxp</liferay.platform>
			</properties>
		</profile>
		<profile>
			<id>dxp73</id>
			<properties>
				<liferay.deploy.version>7.3.10.sp3</liferay.deploy.version>
				<liferay.platform>liferay-dxp</liferay.platform>
			</properties>
		</profile>
		<profile>
			<id>dxp</id>
			<properties>
				<liferay.deploy.version>7.4.13.u4</liferay.deploy.version>
				<liferay.platform>liferay-dxp</liferay.platform>
			</properties>
		</profile>
		<profile>
			<id>faces-war</id>
			<activation>
				<file>
					<exists>src/main/webapp/WEB-INF/faces-config.xml</exists>
				</file>
			</activation>
			<dependencies>
				<dependency>
					<groupId>${faces.api.group.id}</groupId>
					<artifactId>${faces.api.artifact.id}</artifactId>
				</dependency>
				<dependency>
					<groupId>${faces.impl.group.id}</groupId>
					<artifactId>${faces.impl.artifact.id}</artifactId>
				</dependency>
			</dependencies>
		</profile>
		<profile>
			<id>thin</id>
			<properties>
				<aries.cdi.options></aries.cdi.options>
				<osgi.dynamic.import.package>
					DynamicImport-Package: \
						${osgi.dynamic.import.package.liferay.faces.bridge}
				</osgi.dynamic.import.package>
				<faces.impl.scope>provided</faces.impl.scope>
				<osgi.import.package>
					Import-Package: \
						${osgi.import.package.liferay.faces.bridge}
				</osgi.import.package>
				<skip.thin.war.setup>false</skip.thin.war.setup>
				<thick.or.thin>thin</thick.or.thin>
				<war.dependency.scope>provided</war.dependency.scope>
			</properties>
		</profile>
		<profile>
			<id>glassfish</id>
			<properties>
				<app.server.type>glassfish</app.server.type>
				<faces.impl.scope>provided</faces.impl.scope>
				<liferay.app.server.dir>${liferay.home}/glassfish-${liferay.glassfish.version}</liferay.app.server.dir>
				<liferay.deploy.dir>${liferay.app.server.dir}/domains/domain1/autodeploy</liferay.deploy.dir>
				<war.packaging.excludes>
					WEB-INF/ibm-*.xml,
					WEB-INF/jboss-*.xml,
					WEB-INF/web-*.xml,
					WEB-INF/weblogic.xml
				</war.packaging.excludes>
			</properties>
		</profile>
		<profile>
			<id>jboss</id>
			<properties>
				<app.server.type>jboss</app.server.type>
				<faces.impl.scope>provided</faces.impl.scope>
				<liferay.app.server.dir>${liferay.home}/jboss-${liferay.jboss.version}</liferay.app.server.dir>
				<liferay.deploy.dir>${liferay.app.server.dir}/standalone/deployments</liferay.deploy.dir>
				<war.packaging.excludes>
					WEB-INF/glassfish-*.xml,
					WEB-INF/ibm-*.xml,
					WEB-INF/sun-*.xml,
					WEB-INF/web-*.xml,
					WEB-INF/weblogic.xml
				</war.packaging.excludes>
			</properties>
		</profile>
		<profile>
			<id>jboss-portlet-war</id>
			<activation>
				<file>
					<exists>target/jboss-portlet-war-activation.tmp</exists>
				</file>
			</activation>
		</profile>
		<profile>
			<id>jetty</id>
			<properties>
				<app.server.type>jetty</app.server.type>
				<faces.impl.scope>provided</faces.impl.scope>
				<liferay.app.server.dir>${liferay.home}/jetty-${liferay.jetty.version}</liferay.app.server.dir>
			</properties>
		</profile>
		<profile>
			<id>liferay</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>ce72</id>
			<properties>
				<liferay.deploy.version>7.2.1.ga2</liferay.deploy.version>
				<liferay.faces.alloy.version>3.1.0</liferay.faces.alloy.version>
			</properties>
		</profile>
		<profile>
			<id>ce73</id>
			<properties>
				<liferay.deploy.version>7.3.7.ga8</liferay.deploy.version>
			</properties>
		</profile>
		<profile>
			<id>liferay-portlet-war-redeploy</id>
			<activation>
				<file>
					<exists>target/liferay-portlet-war-redeploy-activation.tmp</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>clean</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="Cleaning portlet from ${app.server.type}" />
										<delete failonerror="false" includeemptydirs="true" verbose="true">
											<fileset dir="${liferay.auto.deploy.dir}" includes="${project.artifactId}*.war" />
											<fileset dir="${liferay.auto.deploy.dir}/${project.artifactId}" />
											<fileset dir="${liferay.auto.deploy.dir}/${project.artifactId}-${project.version}" />
											<fileset dir="${liferay.auto.deploy.dir}">
												<include name="*${project.artifactId}.war.deployed" />
												<include name="*${project.artifactId}_deployed" />
											</fileset>
										</delete>
										<delete failonerror="false" includeemptydirs="true" verbose="true">
											<fileset dir="${liferay.deploy.dir}" includes="${project.artifactId}*.war" />
											<fileset dir="${liferay.deploy.dir}/${project.artifactId}.war" />
											<fileset dir="${liferay.deploy.dir}/${project.artifactId}" />
											<fileset dir="${liferay.deploy.dir}/${project.artifactId}-${project.version}" />
											<fileset dir="${liferay.deploy.dir}">
												<include name="*${project.artifactId}.war.deployed" />
												<include name="*${project.artifactId}_deployed" />
											</fileset>
										</delete>
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>mojarra</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>myfaces</id>
			<properties>
				<faces.api.group.id>org.apache.myfaces.core</faces.api.group.id>
				<faces.api.artifact.id>myfaces-api</faces.api.artifact.id>
				<faces.impl.group.id>org.apache.myfaces.core</faces.impl.group.id>
				<faces.impl.artifact.id>myfaces-impl</faces.impl.artifact.id>
				<faces.servlet.container.initializer>org.apache.myfaces.ee6.MyFacesContainerInitializer</faces.servlet.container.initializer>
				<faces.version>${myfaces.version}</faces.version>
			</properties>
		</profile>
		<profile>
			<id>pluto</id>
			<properties>
				<faces.api.scope>provided</faces.api.scope>
				<faces.impl.scope>provided</faces.impl.scope>
				<portal.type>pluto</portal.type>
				<skip.thin.war.setup>true</skip.thin.war.setup>
				<war.dependency.scope>provided</war.dependency.scope>
				<war.dependency.scope.commons.logging>compile</war.dependency.scope.commons.logging>
				<war.dependency.scope.jstl>compile</war.dependency.scope.jstl>
				<war.dependency.scope.primefaces>compile</war.dependency.scope.primefaces>
				<war.packaging.excludes>
					WEB-INF/glassfish-*.xml,
					WEB-INF/ibm-*.xml,
					WEB-INF/jboss-*.xml,
					WEB-INF/liferay-*.*,
					WEB-INF/sun-*.xml,
					WEB-INF/web-*.xml,
					WEB-INF/weblogic.xml
				</war.packaging.excludes>
			</properties>
		</profile>
		<profile>
			<id>pluto-portlet-war</id>
			<activation>
				<file>
					<exists>target/pluto-portlet-war-activation.tmp</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<phase>process-resources</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<mkdir dir="${project.build.outputDirectory}/META-INF/services" />
										<echo message="${faces.servlet.container.initializer}"
											  file="${project.build.outputDirectory}/META-INF/services/javax.servlet.ServletContainerInitializer" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>pluto-portlet-war-redeploy</id>
			<activation>
				<file>
					<exists>target/pluto-portlet-war-redeploy-activation.tmp</exists>
				</file>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<executions>
							<execution>
								<id>clean</id>
								<phase>clean</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<echo message="Cleaning portlet from ${app.server.type}" />
										<delete failonerror="false" includeemptydirs="true" verbose="true">
											<fileset dir="${pluto.deploy.dir}">
												<include name="${project.artifactId}*/" />
												<include name="${project.artifactId}*.war" />
											</fileset>
										</delete>
									</target>
								</configuration>
							</execution>
							<execution>
								<id>install</id>
								<phase>install</phase>
								<goals>
									<goal>run</goal>
								</goals>
								<configuration>
									<target>
										<copy file="${project.build.directory}/${project.build.finalName}.war" tofile="${pluto.deploy.dir}/${project.artifactId}.war" />
									</target>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>redeploy</id>
			<properties>
				<portlet.war.deployment.type>redeploy</portlet.war.deployment.type>
			</properties>
		</profile>
		<profile>
			<id>release</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-javadoc-plugin</artifactId>
						<executions>
							<execution>
								<id>attach-javadocs</id>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
				<resources>
					<resource>
						<directory>src/main/resources</directory>
						<excludes>
							<exclude>rebel.xml</exclude>
						</excludes>
					</resource>
				</resources>
			</build>
		</profile>
		<profile>
			<id>resin</id>
			<properties>
				<app.server.type>resin</app.server.type>
				<faces.impl.scope>provided</faces.impl.scope>
				<liferay.app.server.dir>${liferay.home}/resin-${liferay.resin.version}</liferay.app.server.dir>
			</properties>
		</profile>
		<profile>
			<id>tomcat</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
		<profile>
			<id>weblogic</id>
			<properties>
				<app.server.type>weblogic</app.server.type>
				<liferay.app.server.dir>${liferay.home}/weblogic-${liferay.weblogic.version}</liferay.app.server.dir>
				<liferay.deploy.dir>${liferay.app.server.dir}/autodeploy</liferay.deploy.dir>
				<war.packaging.excludes>
					WEB-INF/glassfish-*.xml,
					WEB-INF/ibm-*.xml,
					WEB-INF/jboss-*.xml,
					WEB-INF/sun-*.xml,
					WEB-INF/web-*.xml
				</war.packaging.excludes>
			</properties>
		</profile>
		<profile>
			<id>weblogic-liferay62</id>
			<properties>
				<faces.impl.scope>provided</faces.impl.scope>
			</properties>
			<dependencies>
			    <dependency>
			        <groupId>xerces</groupId>
			        <artifactId>xercesImpl</artifactId>
			        <version>2.12.2</version>
			    </dependency>
			</dependencies>
			<dependencyManagement>
				<dependencies>
					<dependency>
						<groupId>org.icefaces</groupId>
						<artifactId>icefaces</artifactId>
						<version>${icefaces.version}</version>
						<exclusions>
							<!-- FACES-1725/FACES-1598/PUSH-247: Exclude icepush.jar on WebLogic -->
							<exclusion>
								<groupId>org.icepush</groupId>
								<artifactId>icepush</artifactId>
							</exclusion>
							<exclusion>
								<groupId>org.glassfish</groupId>
								<artifactId>javax.faces</artifactId>
							</exclusion>
							<exclusion>
								<groupId>javax.mail</groupId>
								<artifactId>mail</artifactId>
							</exclusion>
							<exclusion>
								<groupId>javax.activation</groupId>
								<artifactId>javax.activation</artifactId>
							</exclusion>
						</exclusions>
					</dependency>
				</dependencies>
			</dependencyManagement>
		</profile>
		<profile>
			<id>websphere</id>
			<properties>
				<app.server.type>websphere</app.server.type>
				<faces.impl.scope>provided</faces.impl.scope>
				<liferay.app.server.dir>${liferay.home}/websphere-${liferay.websphere.version}</liferay.app.server.dir>
				<war.packaging.excludes>
					WEB-INF/glassfish-*.xml,
					WEB-INF/jboss-*.xml,
					WEB-INF/sun-*.xml,
					WEB-INF/web-*.xml,
					WEB-INF/weblogic.xml
				</war.packaging.excludes>
			</properties>
		</profile>
	</profiles>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.liferay.faces</groupId>
				<artifactId>com.liferay.faces.adf.base</artifactId>
				<version>12.2.1-SNAPSHOT</version>
			</dependency>
			<dependency>
				<groupId>com.liferay.faces</groupId>
				<artifactId>com.liferay.faces.alloy</artifactId>
				<version>${liferay.faces.alloy.version}</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.faces</groupId>
				<artifactId>com.liferay.faces.alloy.reslib</artifactId>
				<version>${liferay.faces.alloy.version}</version>
				<scope>runtime</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.faces</groupId>
				<artifactId>com.liferay.faces.bridge.api</artifactId>
				<version>6.0.0-SNAPSHOT</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.faces</groupId>
				<artifactId>com.liferay.faces.bridge.impl</artifactId>
				<version>${project.version}</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>com.liferay.faces</groupId>
				<artifactId>com.liferay.faces.util</artifactId>
				<version>4.0.0-SNAPSHOT</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>adf-richclient-api-11</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>adf-richclient-impl-11</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>adf-share-base</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>adf-share-ca</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>adflogginghandler</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>adfmportlet</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>trinidad-api</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>trinidad-impl</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.fmwshare</groupId>
				<artifactId>xmlparserv2</artifactId>
				<version>${adf.version}</version>
			</dependency>
			<dependency>
				<groupId>com.oracle.nlsoramapping.jrf</groupId>
				<artifactId>orai18n-mapping</artifactId>
				<version>${gdk.version}</version>
			</dependency>
			<dependency>
				<groupId>org.glassfish</groupId>
				<artifactId>javax.faces</artifactId>
				<version>${mojarra.version}</version>
				<scope>${faces.impl.scope}</scope>
			</dependency>
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>1.1.1</version>
				<scope>${war.dependency.scope.commons.logging}</scope>
			</dependency>
			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>1.2</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.el</groupId>
				<artifactId>javax.el-api</artifactId>
				<version>2.2.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.enterprise</groupId>
				<artifactId>cdi-api</artifactId>
				<version>${cdi.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.faces</groupId>
				<artifactId>javax.faces-api</artifactId>
				<version>${faces.api.version}</version>
				<scope>${faces.api.scope}</scope>
			</dependency>
			<dependency>
				<groupId>javax.inject</groupId>
				<artifactId>javax.inject</artifactId>
				<version>1</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>javax.portlet</groupId>
				<artifactId>portlet-api</artifactId>
				<version>${portlet.api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>javax.servlet.jsp-api</artifactId>
				<version>2.2.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>javax.servlet-api</artifactId>
				<version>3.0.1</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>2.0.1.Final</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>4.13.2</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>4.5.13</version>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.core</groupId>
				<artifactId>myfaces-api</artifactId>
				<version>${myfaces.version}</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.myfaces.core</groupId>
				<artifactId>myfaces-impl</artifactId>
				<version>${myfaces.version}</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.glassfish.web</groupId>
				<artifactId>jstl-impl</artifactId>
				<version>${jstl.version}</version>
				<scope>${war.dependency.scope.jstl}</scope>
				<exclusions>
				    <exclusion>
				        <groupId>javax.servlet</groupId>
				        <artifactId>servlet-api</artifactId>
				    </exclusion>
				    <exclusion>
				        <groupId>javax.servlet.jsp</groupId>
				        <artifactId>jsp-api</artifactId>
				    </exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>6.1.5.Final</version>
				<exclusions>
					<exclusion>
						<groupId>jakarta.validation</groupId>
						<artifactId>jakarta.validation-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.icefaces</groupId>
				<artifactId>icefaces</artifactId>
				<version>${icefaces.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.glassfish</groupId>
						<artifactId>javax.faces</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.mail</groupId>
						<artifactId>mail</artifactId>
					</exclusion>
					<exclusion>
						<groupId>javax.activation</groupId>
						<artifactId>javax.activation</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.icefaces</groupId>
				<artifactId>icefaces-ace</artifactId>
				<version>${icefaces.version}</version>
			</dependency>
			<dependency>
				<groupId>org.icepush</groupId>
				<artifactId>icepush</artifactId>
				<version>${icefaces.version}</version>
				<exclusions>
					<exclusion>
						<artifactId>jsp-api</artifactId>
						<groupId>javax.servlet.jsp</groupId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>com.github.albfernandez.richfaces</groupId>
				<artifactId>richfaces</artifactId>
				<version>${richfaces.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.jboss.spec.javax.el</groupId>
						<artifactId>jboss-el-api_3.0_spec</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>org.jboss.weld.servlet</groupId>
				<artifactId>weld-servlet</artifactId>
				<version>${weld.version}</version>
				<scope>${war.dependency.scope}</scope>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>osgi.annotation</artifactId>
				<version>6.0.1</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.osgi</groupId>
				<artifactId>org.osgi.core</artifactId>
				<version>5.0.0</version>
				<scope>provided</scope>
				<optional>true</optional>
			</dependency>
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Integration test dependencies. -->
			<dependency>
				<groupId>com.liferay.faces.test</groupId>
				<artifactId>com.liferay.faces.test.selenium</artifactId>
				<version>0.5.5</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-java</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-api</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-remote-driver</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-support</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- chromedriver version 2.29 is required. -->
				<!-- Chrome/Chromium 59+ is required for headless testing. -->
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>selenium-chrome-driver</artifactId>
				<version>${selenium.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<!-- phantomjs 2.1.1 is required. -->
				<groupId>com.codeborne</groupId>
				<artifactId>phantomjsdriver</artifactId>
				<version>1.3.0</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.seleniumhq.selenium</groupId>
				<artifactId>htmlunit-driver</artifactId>
				<version>2.23.2</version>
				<scope>test</scope>
			</dependency>
			<!--
			<dependency>
				<groupId>net.sourceforge.htmlunit</groupId>
				<artifactId>htmlunit</artifactId>
				<version>2.23</version>
			</dependency>
			-->
			<dependency>
				<groupId>com.machinepublishers</groupId>
				<artifactId>jbrowserdriver</artifactId>
				<version>0.17.3</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>1.7.25</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>jul-to-slf4j</artifactId>
				<version>1.7.27</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<!-- End integration test dependencies. -->
		</dependencies>
	</dependencyManagement>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>findbugs-maven-plugin</artifactId>
				<version>2.4.0</version>
			</plugin>
		</plugins>
	</reporting>

</project>
